// @generated by protoc-gen-es v1.10.0 with parameter "target=ts"
// @generated from file SpaghettiCannon.proto (package SpaghettiCannon.v1, syntax proto3)
/* eslint-disable */
// @ts-nocheck

import type { BinaryReadOptions, FieldList, JsonReadOptions, JsonValue, PartialMessage, PlainMessage } from "@bufbuild/protobuf";
import { Message, proto3 } from "@bufbuild/protobuf";

/**
 * @generated from message SpaghettiCannon.v1.GetReadyzRequest
 */
export class GetReadyzRequest extends Message<GetReadyzRequest> {
  constructor(data?: PartialMessage<GetReadyzRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SpaghettiCannon.v1.GetReadyzRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReadyzRequest {
    return new GetReadyzRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReadyzRequest {
    return new GetReadyzRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReadyzRequest {
    return new GetReadyzRequest().fromJsonString(jsonString, options);
  }

  static equals(a: GetReadyzRequest | PlainMessage<GetReadyzRequest> | undefined, b: GetReadyzRequest | PlainMessage<GetReadyzRequest> | undefined): boolean {
    return proto3.util.equals(GetReadyzRequest, a, b);
  }
}

/**
 * @generated from message SpaghettiCannon.v1.GetReadyzResponse
 */
export class GetReadyzResponse extends Message<GetReadyzResponse> {
  /**
   * @generated from field: bool is_ready = 1;
   */
  isReady = false;

  constructor(data?: PartialMessage<GetReadyzResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SpaghettiCannon.v1.GetReadyzResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "is_ready", kind: "scalar", T: 8 /* ScalarType.BOOL */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): GetReadyzResponse {
    return new GetReadyzResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): GetReadyzResponse {
    return new GetReadyzResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): GetReadyzResponse {
    return new GetReadyzResponse().fromJsonString(jsonString, options);
  }

  static equals(a: GetReadyzResponse | PlainMessage<GetReadyzResponse> | undefined, b: GetReadyzResponse | PlainMessage<GetReadyzResponse> | undefined): boolean {
    return proto3.util.equals(GetReadyzResponse, a, b);
  }
}

/**
 * @generated from message SpaghettiCannon.v1.AddUpdateRequest
 */
export class AddUpdateRequest extends Message<AddUpdateRequest> {
  /**
   * @generated from field: string content = 1;
   */
  content = "";

  constructor(data?: PartialMessage<AddUpdateRequest>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SpaghettiCannon.v1.AddUpdateRequest";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
    { no: 1, name: "content", kind: "scalar", T: 9 /* ScalarType.STRING */ },
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddUpdateRequest {
    return new AddUpdateRequest().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddUpdateRequest {
    return new AddUpdateRequest().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddUpdateRequest {
    return new AddUpdateRequest().fromJsonString(jsonString, options);
  }

  static equals(a: AddUpdateRequest | PlainMessage<AddUpdateRequest> | undefined, b: AddUpdateRequest | PlainMessage<AddUpdateRequest> | undefined): boolean {
    return proto3.util.equals(AddUpdateRequest, a, b);
  }
}

/**
 * @generated from message SpaghettiCannon.v1.AddUpdateResponse
 */
export class AddUpdateResponse extends Message<AddUpdateResponse> {
  constructor(data?: PartialMessage<AddUpdateResponse>) {
    super();
    proto3.util.initPartial(data, this);
  }

  static readonly runtime: typeof proto3 = proto3;
  static readonly typeName = "SpaghettiCannon.v1.AddUpdateResponse";
  static readonly fields: FieldList = proto3.util.newFieldList(() => [
  ]);

  static fromBinary(bytes: Uint8Array, options?: Partial<BinaryReadOptions>): AddUpdateResponse {
    return new AddUpdateResponse().fromBinary(bytes, options);
  }

  static fromJson(jsonValue: JsonValue, options?: Partial<JsonReadOptions>): AddUpdateResponse {
    return new AddUpdateResponse().fromJson(jsonValue, options);
  }

  static fromJsonString(jsonString: string, options?: Partial<JsonReadOptions>): AddUpdateResponse {
    return new AddUpdateResponse().fromJsonString(jsonString, options);
  }

  static equals(a: AddUpdateResponse | PlainMessage<AddUpdateResponse> | undefined, b: AddUpdateResponse | PlainMessage<AddUpdateResponse> | undefined): boolean {
    return proto3.util.equals(AddUpdateResponse, a, b);
  }
}

